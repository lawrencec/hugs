{
  "name": "hugs",
  "version": "2.2.0",
  "description": "Hugs - a wrapper for test frameworks",
  "author": "Lawrence Carvalho",
  "license": "MIT",
  "main": "src/index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/lawrencec/hugs"
  },
  "directories": {
    "test": "test/"
  },
  "keywords": [
    "tdd",
    "bdd",
    "testing",
    "test",
    "unit",
    "mocha",
    "tap"
  ],
  "dependencies": {
    "sinon": "^1.17.4"
  },
  "devDependencies": {
    "ava": "^0.17.0",
    "babel-polyfill": "^6.9.1",
    "babel-preset-es2015": "^6.9.0",
    "codeclimate-test-reporter": "^0.4.0",
    "eslint": "^3.9.0",
    "eslint-config-iplayer-es6": "^3.1.0",
    "eslint-friendly-formatter": "2.0.7",
    "eslint-plugin-mocha": "^4.7.0",
    "intelli-espower-loader": "^1.0.1",
    "jasmine-core": "^2.4.1",
    "karma": "^1.3.0",
    "karma-babel-preprocessor": "^6.0.1",
    "karma-chrome-launcher": "^2.0.0",
    "karma-coverage": "^1.0.0",
    "karma-espower-preprocessor": "^1.1.0",
    "karma-jasmine": "^1.0.2",
    "karma-junit-reporter": "^1.0.0",
    "karma-mocha": "^1.0.1",
    "karma-phantomjs-launcher": "^1.0.1",
    "karma-power-assert": "0.0.4",
    "karma-sinon": "^1.0.5",
    "karma-spec-reporter": "0.0.26",
    "mocha": "^3.1.2",
    "mochawesome": "^1.3.5",
    "npm-check": "^5.2.1",
    "npm-ls-scripts": "^0.1.2",
    "nyc": "^8.3.2",
    "power-assert": "^1.4.2",
    "tap": "8.0.1",
    "unroll": "1.2.0"
  },
  "scripts": {
    "dep-check": "npm-check",
    "dep-check-i": "npm-check -u",
    "examples": "cd examples;npm run examples;cd ../",
    "lint": "eslint --format 'node_modules/eslint-friendly-formatter' .",
    "lint:fix": "eslint --fix .",
    "help": "ls-scripts",
    "reports:coverage": "open target/coverage/index.html",
    "test": "npm run test:unit; npm run test:functional;",
    "test:browser:run": "karma start ./test/functional/browsers/conf/karma.conf.js",
    "test:browser": "npm run test:browser:jasmine -s; npm run test:browser:mocha -s",
    "test:browser:debug": "karma start ./test/functional/browsers/conf/karma.conf.js  --log-level debug --single-run false --browsers Chrome",
    "test:browser:dev": "karma start ./test/functional/browsers/conf/karma.conf.js --single-run false --autowatch --browsers Chrome",
    "test:browser:jasmine": "HUGS_TEST_LIB=jasmine npm run test:browser:run -s",
    "test:browser:mocha": "HUGS_TEST_LIB=mocha npm run test:browser:run -s",
    "test:functional": "npm run test:functional:ava -s; npm run test:functional:mocha -s; npm run test:functional:tap -s; npm run test:browser -s",
    "test:functional:mocha": "HUGS_LIB=mocha _mocha --async-only --ui tdd 'test/functional/tests.js'",
    "test:functional:tap": "HUGS_LIB=tap tap './test/functional/tests.js'",
    "test:functional:ava": "HUGS_LIB=ava ava --verbose './test/functional/tests.js'",
    "test:report": "nyc report --reporter=html",
    "test:unit:coverage": "nyc --reporter=lcov --reporter=text npm run test:unit; npm run test:report",
    "test:unit:coverage:cc": "npm run test:unit:coverage; codeclimate-test-reporter < target/coverage/lcov.info",
    "test:unit": "_mocha --ui tdd --require intelli-espower-loader --reporter mochawesome --reporter-options reportDir=./target/test-reports/unit,reportName=index,inlineAssets=false './test/unit/**/*.js'"
  },
  "config": {
    "scripts": {
      "dep-check": "Check outdated and unused dependecies",
      "dep-check-i": "Interactively check outdated and unused dependecies",
      "examples": "Run examples",
      "lint": "Lintage",
      "lint:fix": "Automatically fix any lint issues",
      "help": "List available npm run commands",
      "reports:coverage": "Open coverage report in default browser",
      "test": "Run tests",
      "test:browser": "Run browser examples using jasmine and mocha",
      "test:browser:mocha": "Run browser examples using mocha",
      "test:browser:jasmine": "Run browser examples using jasmine",
      "test:browser:debug": "Run browser example in karma debug mode. use HUGS_TEST_LIB=mocha|jasmine to specify test lib to use",
      "test:browser:dev": "Run browser example in karma dev mode. use HUGS_TEST_LIB=mocha|jasmine to specify test lib to use",
      "test:functional": "Run all functional tests",
      "test:functional:mocha": "Run functional tests using mocha as the test runner",
      "test:functional:tap": "Run functional tests using tap as the test runner",
      "test:functional:ava": "Run functional tests using ava as the test runner",
      "test:report": "Build coverage report (html)",
      "test:unit:coverage": "Run unit tests with code coverage",
      "test:unit:coverage:cc": "Run unit tests with code coverage and send to code climate",
      "test:unit": "Run all unit tests"
    }
  },
  "eslintConfig": {
    "rules": {
      "complexity": [
        "error",
        3
      ],
      "semi": [
        "error",
        "always"
      ],
      "consistent-return": [
        "error",
        {}
      ]
    }
  },
  "nyc": {
    "lines": 80,
    "check-coverage": true,
    "report-dir": "./target/coverage",
    "exclude": [
      "node_modules",
      "src/targets/ava.js",
      "test/**/*.js"
    ]
  },
  "greenkeeper": {
    "ignore": []
  }
}
